#pragma checksum "D:\Dani Ramdani\Jobs\WebApp\Views\Companies\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ffded9e754e7e5b065a71f5ffa1eeb1b22261506"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Companies_Index), @"mvc.1.0.view", @"/Views/Companies/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Dani Ramdani\Jobs\WebApp\Views\_ViewImports.cshtml"
using WebApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Dani Ramdani\Jobs\WebApp\Views\_ViewImports.cshtml"
using WebApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ffded9e754e7e5b065a71f5ffa1eeb1b22261506", @"/Views/Companies/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fc48f17eb9bac3476d8060730298bf398eb2fa5e", @"/Views/_ViewImports.cshtml")]
    public class Views_Companies_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\Dani Ramdani\Jobs\WebApp\Views\Companies\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""row clearfix"">
    <div class=""col-lg-12 col-md-12 col-sm-12 col-xs-12"">
        <div class=""card"">
            <div class=""body"">
                <div class=""row clearfix"">
                    <div class=""col-md-12"">
                        <fieldset>
                            <legend>List Company</legend>
                            <div class=""row clearfix"">
                                <div class=""col-md-12"">
                                    <div class=""table-responsive"" style=""float:right;padding:5px"">
                                        <div class=""col-md-10"">

                                        </div>
                                        <div class=""col-2"" style=""float:right"">
");
            WriteLiteral(@"                                            <a class=""btn btn-primary btn-sm"" style=""margin-left: 83%;"" href=""#"" onclick=""OnEdit(0)"" id=""new-list"">
                                                <i class=""fa fa-plus-circle""></i>
                                            </a>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class=""row clearfix"">
                                <div class=""col-md-12"">
                                    <div class=""table-responsive"">
                                        <table id=""example"" class=""table table-striped table-bordered dt-responsive nowrap"" width=""100%"" cellspacing=""0"">
                                            <thead>
                                                <tr>
                                                    <th> Name</th>
                                                    <th>Email");
            WriteLiteral(@"</th>
                                                    <th>Website</th>
                                                    <th>Phone</th>
                                                    <th>Edit</th>
                                                    <th>Delete</th>
                                                </tr>
                                            </thead>
                                        </table>

                                    </div>
                                </div>
                            </div>

                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class=""modal fade"" id=""CompanyModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-tit");
            WriteLiteral(@"le"" id=""exampleModalLabel""><label id=""lblTitle""></label></h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div id=""CompanyModalBody"" class=""modal-body"">
                .
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-light"" data-dismiss=""modal"">Close</button>
                <button type=""button"" class=""btn btn-primary"" onclick=""PostData()"">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script>
    PostData = function () {
        debugger;
            let formdata = $('#formcompany').serializeObject();
            var file_data = $('input[name=""logo""]')[0].files;
            //for (var i = 0; i < file_data.length; i++) {
            //    formdata[""File[]""]= file_data[i];
            //}
            $.ajax({
                url:");
            WriteLiteral(@" ""/api/companies/update "",
                type: ""POST"",

                data: formdata,
                success: function (response) {
                    $('#EmployeeModal').modal('hide');
                    window.location = '/companies';
                },
                error: function (err) {
                    let error = err.responseJSON.errors;

                    if (error?.Name)
                        $(""span[data-valmsg-for='Name']"").html(error.Name);
                    else
                        $(""span[data-valmsg-for='FirstName']"").html('');
                }

            });
        }
    OnDelete = function (id) {
        swal({
            title: ""Are you sure?"",
            text: ""Once deleted, you will not be able to recover this imaginary record!"",
            icon: ""warning"",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    debugger;
        ");
            WriteLiteral(@"            PostDelete('/api/companies/' + id, '/companies');
                }
            });
    }

    OnEdit = function (id) {
        let url = '/companies/edit/' + id;
        $('#CompanyModalBody').load(url, function () {
            if (id > 0)
                $('#lblTitle').text('Update Company');
            else
                $('#lblTitle').text('Create Company');
            $('#CompanyModal').modal('show');
        });
    }

    $(document).ready(function () {

        $(""#example"").DataTable({
            ""processing"": true, // for show progress bar
            ""serverSide"": true, // for process server side
            ""filter"": true, // this is for disable filter (search box)
            ""orderMulti"": false, // for disable multiple column at once
            ""ajax"": {
                ""url"": ""/api/companies/datatable"",
                ""type"": ""POST"",
                ""datatype"": ""json""
            },
            ""columnDefs"": [{
                ""targets"": [],
   ");
            WriteLiteral(@"             ""visible"": false,
                ""searchable"": false
            }],
            ""columns"": [
                { ""data"": ""name"", ""name"": ""Name"", ""autoWidth"": true },
                { ""data"": ""email"", ""name"": ""Email"", ""autoWidth"": true },
                {
                    ""render"": function (data, type, row, meta) { return '<a href=""' + row.webSite + '"" target=""_blank"">' + row.webSite + '</a>'; }
                },
                { ""data"": ""phone"", ""name"": ""Phone"", ""autoWidth"": true },
                {
                    ""render"": function (data, type, full, meta) { return '<a href=""#"" onclick=""OnEdit(' + full.companyId + ')""><i class=""fa fa-pencil""></a>'; }
                },
                {
                    data: null,
                    render: function (data, type, row) {
                        debugger;
                        return ""<a href='#' onclick=OnDelete('"" + row.companyId + ""'); ><i class='fa fa-trash-o'></a>"";
                    }
                ");
            WriteLiteral("},\r\n            ]\r\n\r\n        });\r\n    });\r\n</script>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
