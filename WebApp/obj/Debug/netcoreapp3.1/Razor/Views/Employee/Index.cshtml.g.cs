#pragma checksum "D:\Dani Ramdani\Jobs\WebApp\Views\Employee\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9ae79410e37ec877de512a542404fbcf4423b963"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Employee_Index), @"mvc.1.0.view", @"/Views/Employee/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Dani Ramdani\Jobs\WebApp\Views\_ViewImports.cshtml"
using WebApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Dani Ramdani\Jobs\WebApp\Views\_ViewImports.cshtml"
using WebApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9ae79410e37ec877de512a542404fbcf4423b963", @"/Views/Employee/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fc48f17eb9bac3476d8060730298bf398eb2fa5e", @"/Views/_ViewImports.cshtml")]
    public class Views_Employee_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<DAL.Employee>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\Dani Ramdani\Jobs\WebApp\Views\Employee\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""row clearfix"">
    <div class=""col-lg-12 col-md-12 col-sm-12 col-xs-12"">
        <div class=""card"">
            <div class=""body"">
                <div class=""row clearfix"">
                    <div class=""col-md-12"">
                        <fieldset>
                            <legend>List Employee</legend>
                            <div class=""row clearfix"">
                                <div class=""col-md-12"">
                                    <div class=""table-responsive"" style=""float:right;padding:5px"">
                                        <div class=""col-md-10"">

                                        </div>
                                        <div class=""col-2"" style=""float:right"">
");
            WriteLiteral(@"                                            <a class=""btn btn-primary btn-sm"" style=""margin-left: 83%;"" href=""#"" onclick=""OnEdit(0)"" id=""new-list"">
                                                <i class=""fa fa-plus-circle""></i>
                                            </a>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class=""row clearfix"">
                                <div class=""col-md-12"">
                                    <div class=""table-responsive"">
                                        <table id=""example"" class=""table table-striped table-bordered dt-responsive nowrap"" width=""100%"" cellspacing=""0"">
                                            <thead>
                                                <tr>
                                                    <th>Number</th>
                                                    <th>Firs");
            WriteLiteral(@"t Name</th>
                                                    <th>Last Name</th>
                                                    <th>Full Name</th>
                                                    <th>Email</th>
                                                    <th>Company</th>
                                                    <th>Phone</th>
                                                    <th>Edit</th>
                                                    <th>Delete</th>
                                                </tr>
                                            </thead>
                                        </table>

                                    </div>
                                </div>
                            </div>

                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Modal -->
<div class=""modal fade"" id=""EmployeeModal"" tabindex=""-1"" role=""dialog"" aria-l");
            WriteLiteral(@"abelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLabel""><label id=""lblTitle""></label></h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div id=""EmployeeModalBody"" class=""modal-body"">
                .
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-light"" data-dismiss=""modal"">Close</button>
                <button type=""button"" onclick=""PostData()"" class=""btn btn-primary"">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script>

    PostData = function () {
        let formdata = $('#formemployee').serializeObject();
        $.ajax({
            url");
            WriteLiteral(@": ""/api/employee/update "",
            type: ""POST"",

            data: formdata,
            success: function (response) {
                $('#EmployeeModal').modal('hide');
                window.location = '/employee';
            },
            error: function (err) {
                debugger;
                let error = err.responseJSON.errors;

                if (error?.FirstName)
                    $(""span[data-valmsg-for='FirstName']"").html(error.FirstName);
                else
                    $(""span[data-valmsg-for='FirstName']"").html('');
                if (error?.LastName)
                    $(""span[data-valmsg-for='LastName']"").html(error.LastName);
                else
                    $(""span[data-valmsg-for='LastName']"").html('');
                if (error.Email)
                    $(""span[data-valmsg-for='Email']"").html(error.Email);
                else
                    $(""span[data-valmsg-for='Email']"").html('');
                if (error?.Phone)
  ");
            WriteLiteral(@"                  $(""span[data-valmsg-for='Phone']"").html(error.Phone);
                else
                    $(""span[data-valmsg-for='Phone']"").html('');
            }

        });
    }

    OnDelete = function (id) {
        swal({
            title: ""Are you sure?"",
            text: ""Once deleted, you will not be able to recover this imaginary record!"",
            icon: ""warning"",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    PostDelete('/api/employee/' + id, '/Employee');
                }
            });
    }

    OnEdit = function (id) {
        let url = '/employee/edit/' + id;
        $('#EmployeeModalBody').load(url, function () {
            if (id > 0)
                $('#lblTitle').text('Update Employee');
            else
                $('#lblTitle').text('Create Employee');
            $('#EmployeeModal').modal('show');
        });
    }

    ");
            WriteLiteral(@"$(document).ready(function () {

        let t = $(""#example"").DataTable({
            ""processing"": true, // for show progress bar
            ""serverSide"": true, // for process server side
            ""filter"": true, // this is for disable filter (search box)
            ""orderMulti"": false, // for disable multiple column at once
            ""ajax"": {
                ""url"": ""/api/Employee/DataTable"",
                ""type"": ""POST"",
                ""datatype"": ""json""
            },
            ""columnDefs"": [{
                ""targets"": [],
                ""visible"": false,
                ""searchable"": false
            }],
            ""columns"": [
                { ""data"": ""firstName"", ""name"": ""First Name"", ""autoWidth"": true },
                { ""data"": ""firstName"", ""name"": ""First Name"", ""autoWidth"": true },
                { ""data"": ""lastName"", ""name"": ""Las Name"", ""autoWidth"": true },
                {
                    ""render"": function (data, type, full, meta) {
               ");
            WriteLiteral(@"         debugger;
                        return '<span>' + full.firstName + ' ' + full.lastName + '<span>';
                    }
                },
                { ""data"": ""email"", ""name"": ""Email"", ""autoWidth"": true },
                { ""data"": ""companyName"", ""name"": ""Company"", ""autoWidth"": true },
                { ""data"": ""phone"", ""name"": ""Phone"", ""autoWidth"": true },
                {
                    ""render"": function (data, type, full, meta) {
                        return '<a href=""#"" onclick=""OnEdit(' + full.employeeId + ')""><i class=""fa fa-pencil""></i></a>';
                    }
                },
                {
                    data: null,
                    render: function (data, type, row) {
                        debugger;
                        return ""<a href='#' onclick=OnDelete('"" + row.employeeId + ""'); ><i class='fa fa-trash-o'></a>"";
                    }
                },
            ]

        });

        t.on('order.dt search.dt', function ()");
            WriteLiteral(" {\r\n            t.column(0, { search: \'applied\', order: \'applied\' }).nodes().each(function (cell, i) {\r\n                cell.innerHTML = i + 1;\r\n            });\r\n        }).draw();\r\n    });\r\n</script>\r\n\r\n\r\n");
            WriteLiteral("\r\n\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<DAL.Employee>> Html { get; private set; }
    }
}
#pragma warning restore 1591
